package training.iqgateway.repositories;

import java.time.LocalDateTime;
import java.util.List;

import org.springframework.data.mongodb.repository.MongoRepository;
import org.springframework.data.mongodb.repository.Query;
import org.springframework.stereotype.Repository;

import training.iqgateway.entities.Appointment;
import training.iqgateway.entities.AppointmentStatus;
import training.iqgateway.entities.InsuranceCoverageStatus;

@Repository
public interface AppointmentRepository extends MongoRepository<Appointment, String> {

	@Query("{ 'patient.$id': ?0 }")
    List<Appointment> findByPatientId(String patientId);
    
    @Query("{ 'doctor.$id': ?0 }")
    List<Appointment> findByDoctorId(String doctorId);
    
    List<Appointment> findByStatus(AppointmentStatus status);
    
    List<Appointment> findByInsuranceCoverageStatus(InsuranceCoverageStatus insuranceCoverageStatus);
    
    @Query("{ 'doctor.$id': ?0, 'status': ?1 }")
    List<Appointment> findByDoctorIdAndStatus(String doctorId, AppointmentStatus status);
    
    @Query("{ 'doctor.$id': ?0, 'appointmentDate': ?1 }")
    List<Appointment> findConflictingAppointments(String doctorId, LocalDateTime appointmentDate);
    
    @Query("{ 'doctor.$id': ?0, 'appointmentDate': { $gte: ?1, $lte: ?2 } }")
    List<Appointment> findAppointmentsByDoctorAndDateRange(String doctorId,
                                                          LocalDateTime startTime,
                                                          LocalDateTime endTime);
    
    @Query("{ 'appointmentDate': { $gte: ?0, $lte: ?1 } }")
    List<Appointment> findByAppointmentDateBetween(LocalDateTime startDate, LocalDateTime endDate);
    
    @Query("{ 'createdAt': { $gte: ?0, $lte: ?1 } }")
    List<Appointment> findByCreatedAtBetween(LocalDateTime startDate, LocalDateTime endDate);
}

}
