package training.iqgateway.entities;

package com.example.demo.entity;

import java.time.LocalDateTime;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;
import org.springframework.data.mongodb.core.mapping.DBRef;

@Document(collection = "jwt_tokens")
public class JWTToken {

    @Id
    private String id; // MongoDB auto-generated unique ID

    @DBRef
    private User user; // Reference to User (stored in a separate "Users" collection)

    private String token;

    private LocalDateTime expiresAt;

    // Default Constructor
    public JWTToken() {
    }

    // Constructor with all fields
    public JWTToken(String id, User user, String token, LocalDateTime expiresAt) {
        this.id = id;
        this.user = user;
        this.token = token;
        this.expiresAt = expiresAt;
    }

    // Constructor without ID (for creation)
    public JWTToken(User user, String token, LocalDateTime expiresAt) {
        this.user = user;
        this.token = token;
        this.expiresAt = expiresAt;
    }

    // Getters and Setters

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public User getUser() {
        return user;
    }

    public void setUser(User user) {
        this.user = user;
    }

    public String getToken() {
        return token;
    }

    public void setToken(String token) {
        this.token = token;
    }

    public LocalDateTime getExpiresAt() {
        return expiresAt;
    }

    public void setExpiresAt(LocalDateTime expiresAt) {
        this.expiresAt = expiresAt;
    }
}
