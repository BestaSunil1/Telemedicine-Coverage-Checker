package training.iqgateway.services;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import training.iqgateway.entities.Appointment;
import training.iqgateway.entities.AppointmentStatus;
import training.iqgateway.entities.DoctorAvailability;
import training.iqgateway.entities.InsuranceCoverageStatus;
import training.iqgateway.repositories.AppointmentNoteRepository;
import training.iqgateway.repositories.AppointmentRepository;
import training.iqgateway.repositories.DoctorAvalilabilityRepository;
import training.iqgateway.repositories.DoctorRepository;
import training.iqgateway.repositories.PatientRepository;

@Service
public class AppointmentService {

//	@Autowired
//	private AppointmentRepository appointmentRepository;
//	@Autowired
//	private  DoctorAvalilabilityRepository doctorAvailabilityRepository;
//	@Autowired
//	private DoctorRepository doctorRepository;
//	@Autowired
//	private PatientRepository patientRepository;
//
//	
//	public List<DoctorAvailability> getAllDoctorAvailabilities() {
//		return doctorAvailabilityRepository.findAll();
//	}
//	
//	public Optional<DoctorAvailability> getDoctorAvailabilityById(String id) {
//		return doctorAvailabilityRepository.findById(id);
//	}
//	
//	public DoctorAvailability getByDoctorId(String doctorId) {
//		return doctorAvailabilityRepository.findByDoctorId(doctorId);
//	}
//	
//
//	
//	
//	
//	
//	
//	
//	
//	
//	// Add methods to handle appointment-related operations
//	public Appointment createAppointment(Appointment appointment) {
//		return appointmentRepository.save(appointment);
//	}
//	
//	public Optional<Appointment> getAppointmentById(String id) {
//		return appointmentRepository.findById(id);
//	}
//	
//	public void deleteAppointment(String id) {
//		appointmentRepository.deleteById(id);
//	}
//	public Appointment updateAppointment(Appointment appointment) {
//		return appointmentRepository.save(appointment);
//	}
//	
//	public List<Appointment> getAllAppointments() {
//		return appointmentRepository.findAll();
//	}
//	public List<Appointment> getAppointmentsByPatientId(String patientId) {
//		return appointmentRepository.findByPatientId(patientId);
//	}
//	public List<Appointment> getAppointmentsByDoctorId(String doctorId) {
//		return appointmentRepository.findByDoctorId(doctorId);
//	}
//	public List<Appointment> getAppointmentsByStatus(AppointmentStatus status) {
//		return appointmentRepository.findByStatus(status);
//	}
//	public List<Appointment> getAppointmentsByInsuranceCoverageStatus(InsuranceCoverageStatus insuranceCoverageStatus) {
//		return appointmentRepository.findByInsuranceCoverageStatus(insuranceCoverageStatus);
//	}
	@Autowired
    private AppointmentRepository appointmentRepository;
    
    @Autowired
    private DoctorRepository doctorRepository;
    
    @Autowired
    private PatientRepository patientRepository;
    
    @Autowired
    private DoctorAvalilabilityRepository availabilityRepository;
    
//    @Autowired
//    private NotificationService notificationService;
//    
//    @Autowired
//    private AppointmentNoteRepository noteRepository;
//    
//    // Book new appointment
//    public AppointmentResponse bookAppointment(AppointmentBookingRequest request) {
//        try {
//            // Validate doctor availability
//            if (!isDoctorAvailable(request.getDoctorId(), request.getScheduledAt())) {
//                return new AppointmentResponse(null, "Doctor is not available at the requested time");
//            }
//            
//            // Check for conflicting appointments
//            List<Appointment> conflicts = appointmentRepository.findConflictingAppointments(
//                request.getDoctorId(), request.getScheduledAt());
//            
//            if (!conflicts.isEmpty()) {
//                return new AppointmentResponse(null, "Time slot is already booked");
//            }
//            
//            // Create appointment
//            Appointment appointment = new Appointment();
//            appointment.setPatientId(request.getPatientId());
//            appointment.setDoctorId(request.getDoctorId());
//            appointment.setScheduledAt(request.getScheduledAt());
//            appointment.setInsuranceCoverageStatus(request.getInsuranceCoverageStatus());
//            appointment.setVideoSessionId(request.getVideoSessionId());
//            appointment.setCoverageCheckTime(LocalDateTime.now());
//            
//            Appointment savedAppointment = appointmentRepository.save(appointment);
//            
//            // Create appointment note
//            createAppointmentNote(savedAppointment.getId(), 
//                "Appointment booked for " + request.getScheduledAt(), "booking");
//            
//            // Send notification to doctor
//            notificationService.notifyDoctorOfNewAppointment(
//                request.getDoctorId(), savedAppointment.getId(), request.getPatientId());
//            
//            return new AppointmentResponse(savedAppointment.getId(), 
//                "Appointment booked successfully. Notification sent to doctor.");
//            
//        } catch (Exception e) {
//            return new AppointmentResponse(null, "Error booking appointment: " + e.getMessage());
//        }
//    }
//    
//    // Doctor accepts appointment
//    public AppointmentResponse acceptAppointment(String appointmentId, String doctorId) {
//        try {
//            Optional<Appointment> appointmentOpt = appointmentRepository.findById(appointmentId);
//            
//            if (!appointmentOpt.isPresent()) {
//                return new AppointmentResponse(appointmentId, "Appointment not found");
//            }
//            
//            Appointment appointment = appointmentOpt.get();
//            
//            if (!appointment.getDoctorId().equals(doctorId)) {
//                return new AppointmentResponse(appointmentId, "Unauthorized access");
//            }
//            
//            if (!"pending".equals(appointment.getStatus())) {
//                return new AppointmentResponse(appointmentId, 
//                    "Cannot accept appointment. Current status: " + appointment.getStatus());
//            }
//            
//            // Update status to confirmed
//            appointment.setStatus("confirmed");
//            appointmentRepository.save(appointment);
//            
//            // Create note
//            createAppointmentNote(appointmentId, "Appointment confirmed by doctor", "status_update");
//            
//            // Notify patient
//            notificationService.notifyPatientOfAppointmentUpdate(
//                appointment.getPatientId(), appointmentId, 
//                "Your appointment has been confirmed by the doctor.");
//            
//            return new AppointmentResponse(appointmentId, "Appointment accepted successfully");
//            
//        } catch (Exception e) {
//            return new AppointmentResponse(appointmentId, "Error accepting appointment: " + e.getMessage());
//        }
//    }
//    
//    // Doctor rejects appointment
//    public AppointmentResponse rejectAppointment(String appointmentId, String doctorId, String reason) {
//        try {
//            Optional<Appointment> appointmentOpt = appointmentRepository.findById(appointmentId);
//            
//            if (!appointmentOpt.isPresent()) {
//                return new AppointmentResponse(appointmentId, "Appointment not found");
//            }
//            
//            Appointment appointment = appointmentOpt.get();
//            
//            if (!appointment.getDoctorId().equals(doctorId)) {
//                return new AppointmentResponse(appointmentId, "Unauthorized access");
//            }
//            
//            if (!"pending".equals(appointment.getStatus())) {
//                return new AppointmentResponse(appointmentId, 
//                    "Cannot reject appointment. Current status: " + appointment.getStatus());
//            }
//            
//            // Update status to cancelled
//            appointment.setStatus("cancelled");
//            appointmentRepository.save(appointment);
//            
//            // Create note
//            String noteText = reason != null ? 
//                "Appointment cancelled by doctor. Reason: " + reason : 
//                "Appointment cancelled by doctor";
//            createAppointmentNote(appointmentId, noteText, "cancellation");
//            
//            // Notify patient
//            String notificationMessage = reason != null ? 
//                "Your appointment has been cancelled by the doctor. Reason: " + reason :
//                "Your appointment has been cancelled by the doctor.";
//            
//            notificationService.notifyPatientOfAppointmentUpdate(
//                appointment.getPatientId(), appointmentId, notificationMessage);
//            
//            return new AppointmentResponse(appointmentId, "Appointment rejected successfully");
//            
//        } catch (Exception e) {
//            return new AppointmentResponse(appointmentId, "Error rejecting appointment: " + e.getMessage());
//        }
//    }
//    
//    // Get pending appointments for doctor
//    public List<Appointment> getPendingAppointments(String doctorId) {
//        return appointmentRepository.findByDoctorIdAndStatus(doctorId, "pending");
//    }
//    
//    // Get available time slots
//    public List<LocalDateTime> getAvailableSlots(String doctorId, LocalDate date) {
//        String dayOfWeek = date.getDayOfWeek().toString().toLowerCase();
//        
//        DoctorAvailability availability = availabilityRepository
//            .findByDoctorIdAndDayOfWeekAndIsAvailable(doctorId, dayOfWeek, true);
//        
//        if (availability == null) {
//            return new ArrayList<>();
//        }
//        
//        // Get existing appointments for the day
//        LocalDateTime startOfDay = date.atStartOfDay();
//        LocalDateTime endOfDay = date.atTime(23, 59, 59);
//        
//        List<Appointment> existingAppointments = appointmentRepository
//            .findAppointmentsByDoctorAndDateRange(doctorId, startOfDay, endOfDay);
//        
//        // Generate available slots
//        List<LocalDateTime> availableSlots = new ArrayList<>();
//        LocalTime currentTime = availability.getStartTime();
//        LocalTime endTime = availability.getEndTime();
//        int duration = availability.getAppointmentDuration() != null ? 
//            availability.getAppointmentDuration() : 30;
//        
//        while (currentTime.isBefore(endTime)) {
//            LocalDateTime slotDateTime = date.atTime(currentTime);
//            
//            // Check if slot is not booked
//            boolean isBooked = existingAppointments.stream()
//                .anyMatch(apt -> apt.getScheduledAt().equals(slotDateTime));
//            
//            if (!isBooked) {
//                availableSlots.add(slotDateTime);
//            }
//            
//            currentTime = currentTime.plusMinutes(duration);
//        }
//        
//        return availableSlots;
//    }
//    
//    // Check if doctor is available
//    private boolean isDoctorAvailable(String doctorId, LocalDateTime requestedTime) {
//        String dayOfWeek = requestedTime.getDayOfWeek().toString().toLowerCase();
//        
//        DoctorAvailability availability = availabilityRepository
//            .findByDoctorIdAndDayOfWeekAndIsAvailable(doctorId, dayOfWeek, true);
//        
//        if (availability == null) {
//            return false;
//        }
//        
//        LocalTime requestedTimeOnly = requestedTime.toLocalTime();
//        return !requestedTimeOnly.isBefore(availability.getStartTime()) && 
//               !requestedTimeOnly.isAfter(availability.getEndTime());
//    }
//    
//    // Create appointment note
//    private void createAppointmentNote(String appointmentId, String noteText, String noteType) {
//        AppointmentNote note = new AppointmentNote();
//        note.setAppointmentId(appointmentId);
//        note.setNoteText(noteText);
//        note.setNoteType(noteType);
//        noteRepository.save(note);
//    }
//    
//    // Get appointment details
//    public Appointment getAppointmentDetails(String appointmentId) {
//        return appointmentRepository.findById(appointmentId).orElse(null);
//    }
}
