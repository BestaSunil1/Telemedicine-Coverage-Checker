package training.iqgateway.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import training.iqgateway.dto.LoginRequest;
import training.iqgateway.service.UserService;

@RestController
@RequestMapping("/api/users")
@CrossOrigin(origins = "http://localhost:5173")
public class UserController {
	
	@Autowired
	private UserService userService;
	
//	@PostMapping("/login")
//	public ResponseEntity<?> login(@RequestBody LoginRequest loginRequest) {
//	    boolean authenticated = userService.authenticate(loginRequest);
//	    if (authenticated) {
//	        // Example: Return a JWT token in real scenarios
//	        return ResponseEntity.ok("Login successful");
//	    } else {
//	        return ResponseEntity.status(HttpStatus.UNAUTHORIZED)
//	                .body("Invalid username or password");
//	    }
//	}
	
	@GetMapping("/login")
	public ResponseEntity<?> login(@RequestBody LoginRequest loginRequest) {
	    boolean isAuthenticated = userService.authenticate(loginRequest);

	    if (isAuthenticated) {
	        // In production, you would return a JWT token here
	        return ResponseEntity.ok("Login successful");
	    } else {
	        return ResponseEntity
	                .status(HttpStatus.UNAUTHORIZED)
	                .body("Invalid email or password");
	    }
	}


}
