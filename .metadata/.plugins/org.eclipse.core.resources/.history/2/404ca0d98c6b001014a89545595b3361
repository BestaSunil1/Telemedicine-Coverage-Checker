package training.iqgateway.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import training.iqgateway.entities.Doctor;
import training.iqgateway.services.DoctorService;

@RestController
@RequestMapping("/api/doctors")
public class DoctorController {
	
	@Autowired
	private DoctorService doctorService;
	
	@PostMapping("/create")
	public ResponseEntity<Doctor> createDoctor(Doctor doctor) {
		Doctor createdDoctor = doctorService.createDoctor(doctor);
		return ResponseEntity.status(HttpStatus.CREATED).body(createdDoctor);
	}
	
	@GetMapping("/all")
	public ResponseEntity<Iterable<Doctor>> getAllDoctors() {
		Iterable<Doctor> doctors = doctorService.getAllDoctors();
		return ResponseEntity.ok(doctors);
	}
	@GetMapping("/{id}")
	public ResponseEntity<Doctor> getDoctorById(@PathVariable String  id) {
		return doctorService.getDoctorById(id)
				.map(ResponseEntity::ok)
				.orElse(ResponseEntity.notFound().build());
	}
	
	@GetMapping("/specilization/{name}")
	public ResponseEntity<Iterable<Doctor>> getDoctorsBySpecialization(@PathVariable String name) {
			Iterable<Doctor> doctors = doctorService.getDoctorsBySpecialization(name);
			if (doctors.iterator().hasNext()) {
				return ResponseEntity.ok(doctors);
			} else {
				return ResponseEntity.status(HttpStatus.NOT_FOUND).body(null);
			}
	}
}
